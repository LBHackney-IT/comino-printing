# Welcome to Serverless!
#
# This file is the main config file for your service.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: comino-printing
plugins:
  - serverless-dynamodb-local
  - serverless-finch

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: dotnetcore2.1
  region: eu-west-2
  stage: ${opt:stage}
  environment:
    LETTERS_TABLE_NAME: "${self:service}-${self:provider.stage}-letters-2"
    W2_DOCUMENT_BASE_URL: ${ssm:/hn-comino-printing/${self:provider.stage}/W2_DOCUMENTS_API}
    GENERATED_PDF_BUCKET_NAME: "${self:service}-${self:provider.stage}-ui"

package:
  artifact: ./src/Lambda/bin/release/netcoreapp2.1/comino-printing.zip

functions:
  fetch-document-ids:
    name: ${self:service}-${self:provider.stage}-fetch-document-ids
    handler: Lambda::AwsDotnetCsharp.Handlers::FetchAndQueueDocumentIds
    role: arn:aws:iam::775052747630:role/LBH_Lambda_Execution
    events:
      - schedule: rate(1 minute)
    environment:
      COMINO_DB_CONN_STR: ${ssm:/hn-comino-printing/${self:provider.stage}/COMINO_DB_CONN_STR~true}
      SQS_URL: ${ssm:/hn-comino-printing/${self:provider.stage}/SQS_URL}
      ENV: ${self:provider.stage}

  listen-for-sqs-events:
    name: ${self:service}-${self:provider.stage}-listen-for-sqs-events
    handler: Lambda::AwsDotnetCsharp.Handlers::ListenForSqsEvents
    role: arn:aws:iam::775052747630:role/LBH_Lambda_Execution
    events:
      - sqs: arn:aws:sqs:eu-west-2:775052747630:sqs-comino-printing-${self:provider.stage}
        batchSize: 1

resources:
  Resources:
    cominoLetters:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.LETTERS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: InitialTimestamp
            AttributeType: S
          - AttributeName: Status
            AttributeType: S
        KeySchema:
          - AttributeName: InitialTimestamp
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: Status
            KeySchema:
              - AttributeName: Status
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    sqsQueueCominoPrintingDocumentIds:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: sqs-comino-printing-${self:provider.stage}
    uiBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "${self:service}-${self:provider.stage}-ui"
    generatedPdfsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BuketName: "${self:service}-${self:provider.stage}-generatedPdfs"

custom:
  dynamodb:
    stages:
      - dev
      - test
    start:
      port: 8000
      inMemory: true
      migrate: true
  client:
    bucketName: ${self:provider.environment.LETTERS_TABLE_NAME}
    distributionFolder: comino-print-ui/build
    indexDocument: index.html
    errorDocument: index.html
